import streamlit as st
import pandas as pd
import plotly.express as px

# Cargar y preparar datos
@st.cache_data
def cargar_datos():
    df = pd.read_csv("bd_medicacion.csv")
    df["A√±o"] = pd.to_numeric(df["A√±o"], errors="coerce")
    return df

df = cargar_datos()

st.title("üìä Visualizaci√≥n 3D Interactiva de Medicaci√≥n")
st.markdown("Explora la evoluci√≥n cruzando m√∫ltiples variables en un gr√°fico 3D animado.")

# --- Selecci√≥n de variables para el gr√°fico ---
st.sidebar.header("‚öôÔ∏è Configuraci√≥n del gr√°fico 3D")

columnas = ["A√±o", "Sexo", "Edad", "Clase_social", "Categor√≠a"]
eje_x = st.sidebar.selectbox("Eje X", columnas, index=0)
eje_y = st.sidebar.selectbox("Eje Y", columnas, index=1)
eje_z = st.sidebar.selectbox("Eje Z", columnas, index=2)
tama√±o = st.sidebar.selectbox("Tama√±o de los puntos", ["Personas"])
color = st.sidebar.selectbox("Color por", columnas, index=3)

# --- Filtros opcionales ---
st.sidebar.header("üéöÔ∏è Filtros")
categorias = st.sidebar.multiselect("Categor√≠as", df["Categor√≠a"].unique(), default=df["Categor√≠a"].unique())
df_filtrado = df[df["Categor√≠a"].isin(categorias)]

# --- Gr√°fico 3D con Plotly ---
st.write(f"### üîç Gr√°fico 3D: {eje_x} vs {eje_y} vs {eje_z}")

fig = px.scatter_3d(
    df_filtrado,
    x=eje_x,
    y=eje_y,
    z=eje_z,
    size=tama√±o,
    color=color,
    animation_frame="A√±o",  # para ver la evoluci√≥n por a√±o
    opacity=0.7,
    title=f"Distribuci√≥n de personas por {eje_x}, {eje_y}, {eje_z}",
    height=700
)

fig.update_traces(marker=dict(sizemin=3))
st.plotly_chart(fig)
